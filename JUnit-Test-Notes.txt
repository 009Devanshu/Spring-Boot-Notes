Step 01: What is JUnit and Unit Testing

Testing: Check behaviour against expected behaviour
    Option 1: Deploy the complete application and test. This is called system testing and integration testing.
    Option 2: Test specific units of application code indepedently.
        Examples: A specific method or group of methods.
        This is called unit testing.
        Most popular java frameworks: JUnit and Mockito
Recommended: Option 1 + Option 2

Step 02: Your first JUnit project and green bar --

Absence of failure is success.
We write certain test conditions or assert, if any of these conditions are failed, your unit test is failed.

Right Click Anywhere>> Coverage As>> JUnit test 
When we run>> We get unit test results. We can see green bar or red bar. If red bar, we click on the method that 
is causing error and we can trace that method as well.

For unit testing, we make test folder. Inside that folder, we create a Junit Test Case in the same packege in which the class in source folder presents. And the convention for writing the unit test class is 
name of jnit Test case (a java class) in source folder followed by Test. 
Example: If name of the class is MyMath, then name of the class for unit test is MyMathTest.
=====================================================================================================================


Step 03: Your First Code and First Unit Test

Refactor>> Inline

Nothing special, just add another method with Zero member array. And learnt how to make a method short using Refactor>> Inline.
========================================================================================================================================================================


Step 04: Exploring other assert methods

assertTrue (With or without message parameter)
assertFalse (With or without message parameter)
assertNull
assertNotNull
assertArrayEquals
Example--
    assertArrayEquals(new int[] {1,2},new int[] {2,2});

========================================================================================================================================================================

Step 05: Exploring few important junit annotatations

junit does not give gurantee of execution of unit test methods in the same order as they are written. But junit provides other options --

@BeforeEach
@AfterEach
@BeforeAll
@AfterAll




